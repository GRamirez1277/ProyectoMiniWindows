/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visor;

import java.awt.Image;
import java.io.File;
import java.util.LinkedList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author USER
 */
public class visor extends javax.swing.JFrame {
    private String tipo;
    private String nombre;

    /**
     * Creates new form visor
     */
    
    LinkedList<String> imagePaths;
    int index=0;
    
    public visor() {
        initComponents();
        tipo = "Administrador";
        nombre = "NombreUsuario";
    }
    
    public static boolean isImage(String nombre){
        String extension=getFileExtension(nombre);
        if(extension!=null&&(extension.equalsIgnoreCase("jpg")
                ||extension.equalsIgnoreCase("png")
                ||extension.equalsIgnoreCase("jpeg")))
            return true;
        return false;
    }
    
    public static String getFileExtension(String nombre){
        int indicePunto=nombre.lastIndexOf(".");
        if(indicePunto>0&&indicePunto<nombre.length()-1)
            return nombre.substring(indicePunto+1).toLowerCase();
        return null;
    }
    
    public void showImage(String name){
        Image miImagen=new ImageIcon(name).getImage();
        ImageIcon imagen=new ImageIcon(miImagen.getScaledInstance(650,310, Image.SCALE_SMOOTH));
        imagenActual.setIcon(imagen);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        imagenIzquierda = new javax.swing.JButton();
        imagenDerecha = new javax.swing.JButton();
        imagenActual = new javax.swing.JLabel();
        salirBoton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        opcionCarpeta = new javax.swing.JMenu();
        abrirImagen = new javax.swing.JMenuItem();
        abrirCarpeta = new javax.swing.JMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        imagenIzquierda.setBackground(new java.awt.Color(255, 255, 255));
        imagenIzquierda.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Downloads\\Imágenes descargadas\\Mini Windows\\Visor de Imagenes\\Izquierda.png")); // NOI18N
        imagenIzquierda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imagenIzquierda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        imagenIzquierda.setMaximumSize(new java.awt.Dimension(2410, 2411));
        imagenIzquierda.setMinimumSize(new java.awt.Dimension(2410, 2411));
        imagenIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imagenIzquierdaActionPerformed(evt);
            }
        });

        imagenDerecha.setBackground(new java.awt.Color(255, 255, 255));
        imagenDerecha.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Downloads\\Imágenes descargadas\\Mini Windows\\Visor de Imagenes\\Derecha.png")); // NOI18N
        imagenDerecha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imagenDerecha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        imagenDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imagenDerechaActionPerformed(evt);
            }
        });

        salirBoton.setBackground(new java.awt.Color(255, 255, 255));
        salirBoton.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Downloads\\pngegg.png")); // NOI18N
        salirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBotonActionPerformed(evt);
            }
        });

        opcionCarpeta.setText("Archivo");

        abrirImagen.setText("Abrir imagen");
        abrirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirImagenActionPerformed(evt);
            }
        });
        opcionCarpeta.add(abrirImagen);

        abrirCarpeta.setText("Abrir carpeta");
        abrirCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirCarpetaActionPerformed(evt);
            }
        });
        opcionCarpeta.add(abrirCarpeta);

        jMenuBar1.add(opcionCarpeta);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(imagenIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 420, Short.MAX_VALUE)
                .addComponent(imagenDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addComponent(imagenActual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(salirBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(salirBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagenActual, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagenIzquierda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagenDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void imagenIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagenIzquierdaActionPerformed
        if(index>0){
            index--;
            String nombre=imagePaths.get(index);
            showImage(nombre);
            enableDisable();
        }
    }//GEN-LAST:event_imagenIzquierdaActionPerformed

    private void abrirCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirCarpetaActionPerformed
        imagePaths = new LinkedList<String>();
    String direccion = "";
    JFileChooser selectorArchivos = new JFileChooser();
    selectorArchivos.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    
    // Configurar el directorio inicial según el tipo de usuario
    if (tipo.equals("Administrador")) {
        selectorArchivos.setCurrentDirectory(new File("Z"));
    } else {
        selectorArchivos.setCurrentDirectory(new File("Z/" + nombre));
    }
    
    int seleccion = selectorArchivos.showOpenDialog(this);
    if (seleccion != JFileChooser.CANCEL_OPTION) {
        File direccionSeleccionada = selectorArchivos.getSelectedFile();
        direccion = selectorArchivos.getSelectedFile().getPath();
        File folder = new File(direccion);
        if (folder.exists() && folder.isDirectory()) {
            File[] archivos = folder.listFiles();
            if (archivos != null) {
                for (File archivo : archivos) {
                    if (archivo.isFile() && isImage(archivo.getName()))
                        imagePaths.add(archivo.getAbsolutePath());
                }
            }
        }
        String nombre = imagePaths.get(index);
        showImage(nombre);
        enableDisable();
    }
    }//GEN-LAST:event_abrirCarpetaActionPerformed

    private void abrirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirImagenActionPerformed
        JFileChooser selectorArchivos=new JFileChooser();
        selectorArchivos.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtro=new FileNameExtensionFilter("Imagenes","png","jpg","jpeg");
        selectorArchivos.setFileFilter(filtro);
        int res=selectorArchivos.showOpenDialog(this);
        if(res!=JFileChooser.CANCEL_OPTION){
            File file=selectorArchivos.getSelectedFile();
            if((file==null)||file.getName().equals(""))
                JOptionPane.showMessageDialog(rootPane, "Error al abrir el archivo");
            else
                showImage(file.getAbsolutePath());
        }
    }//GEN-LAST:event_abrirImagenActionPerformed

    private void imagenDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagenDerechaActionPerformed
        if(index<imagePaths.size()-1){
            index++;
            String nombre=imagePaths.get(index);
            showImage(nombre);
            enableDisable();
        }
    }//GEN-LAST:event_imagenDerechaActionPerformed

    private void salirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBotonActionPerformed
        this.dispose();
    }//GEN-LAST:event_salirBotonActionPerformed

    private void enableDisable(){
        if(index-1<=0)
            imagenIzquierda.setEnabled(false);
        if(index>0)
            imagenIzquierda.setEnabled(true);
        if(index+1>=imagePaths.size())
            imagenDerecha.setEnabled(false);
        if(index+1<imagePaths.size())
            imagenDerecha.setEnabled(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(visor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(visor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(visor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(visor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new visor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirCarpeta;
    private javax.swing.JMenuItem abrirImagen;
    private javax.swing.JLabel imagenActual;
    private javax.swing.JButton imagenDerecha;
    private javax.swing.JButton imagenIzquierda;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu opcionCarpeta;
    private javax.swing.JButton salirBoton;
    // End of variables declaration//GEN-END:variables
}
